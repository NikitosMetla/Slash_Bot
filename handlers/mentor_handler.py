import asyncio
import datetime

from aiogram import Router, Bot, types, F
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import any_state
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from db.repository import mentor_repository
from settings import send_link_photo_id, mentor_video_note
from utils.is_subscriber import is_subscriber

mentor_router = Router()


@mentor_router.callback_query(Text(startswith="mentor|"), any_state)
@is_subscriber
async def user_send_mentor(message: types.CallbackQuery, state: FSMContext, bot: Bot):
    user = await mentor_repository.get_user_by_user_id(user_id=message.from_user.id)
    if user is None:
        await mentor_repository.add_mentor(user_id=message.from_user.id, last_date_start=datetime.datetime.now())
    else:
        await mentor_repository.update_user_last_start_date_by_user_id(user_id=message.from_user.id)
    await message.message.answer_video_note(video_note=mentor_video_note)
    await asyncio.sleep(3)
    link = '<a href="https://t.me/slashstudy">–°–ª–µ—à</a>'
    await message.message.answer(f'–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Ä–µ–±—è—Ç–∞–º–∏ –∏–∑ –°–ª–µ—à –∏ –¥–∏–∑–∞–π–Ω-—Å—Ç—É–¥–∏–∏ –í–∞–π—Ç.\n\n{link} - —ç—Ç–æ —Ç–≤–æ–π —Å—Ç–∞—Ä—à–∏–π –±—Ä–∞—Ç –≤ –¥–∏–∑–∞–π–Ω–µ. –ú–µ–Ω—Ç–æ—Ä, –∑–∞–¥–∞—á–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å—Ç–∞—Ç—å –∫—Ä—É—á–µ')
    await asyncio.sleep(1.5)
    await message.message.answer("–ü—Ä–∏ —ç—Ç–æ–º –Ω–µ –∑–∞–¥–æ–ª–±–∞—Ç—å –ø—É—à–∞–º–∏ –∏ —Å—É—Ö–∏–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏, –∞ –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –¥—Ä—É–≥: –±—ã—Ç—å —Ä—è–¥–æ–º, –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ –≤–µ—Ä–Ω—ã–π –ø—É—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–æ –≤—Ä–µ–º—è –¥–æ—Ä–æ–≥–∏")
    await asyncio.sleep(2)
    await message.message.answer('–°–µ–Ω—å–æ—Ä –∏ –ª–∏–¥ –¥–∏–∑–∞–π–Ω–µ—Ä—ã –∏–∑ Ozon, Yandex, –°–ë–ï–†, –ú–¢–° –∏ –¥—Ä—É–≥–∏—Ö –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π –∫–æ–ø–Ω—É—Ç –≤ —Ç–≤–æ–∏ –ø—Ä–æ–±–ª–µ–º—ã/—Ö–æ—Ç–µ–ª–∫–∏ –∏ —Å–æ—Å—Ç–∞–≤—è—Ç –ª–∏—á–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è –≤ –Ω–æ—É—à–µ–Ω–µ. –ü–æ —Ö–æ–¥—É –ø—É—Ç–∏ –≤—Å–µ –≤—Ä–µ–º—è –±—É–¥—É—Ç —Å —Ç–æ–±–æ–π –æ—Ç–≤–µ—á–∞—è –Ω–∞ –ª—é–±—ã–µ  –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞—á–∏–Ω–∞—è –æ—Ç "–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ —Ñ–∏–≥–º–µ" –∑–∞–∫–∞–Ω—á–∏–≤–∞—è "–ö–∞–∫ –∑–∞–±—Ä–∞—Ç—å —Ç–µ–Ω–¥–µ—Ä —Å –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–µ–π"')
    await asyncio.sleep(2)
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="üéÅ –ù–∞–π—Ç–∏ –º–µ–Ω—Ç–æ—Ä–∞", url="https://slashstudy.ru"))
    await message.message.answer("–Ø —Å—á–∏—Ç–∞—é, –±—É–¥–µ—Ç —á–µ—Å—Ç–Ω–æ –ø–æ–¥–∞—Ä–∏—Ç—å —Ç–µ–±–µ —Å–∫–∏–¥–∫—É –Ω–∞ –ø–µ—Ä–≤—É—é –≤—Å—Ç—Ä–µ—á—É - 30% –¥–æ –Ω–∞—á–∞–ª–∞ –ª–µ—Ç–∞. –ó–∞–ª–µ—Ç–∞–π –Ω–∞ —Å–∞–π—Ç, –æ–Ω–∞ —É–∂–µ –∂–¥–µ—Ç —Ç–µ–±—è)", reply_markup=keyboard.as_markup())